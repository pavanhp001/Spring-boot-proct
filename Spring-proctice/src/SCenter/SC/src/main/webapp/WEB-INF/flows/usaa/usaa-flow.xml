<?xml version="1.0" encoding="UTF-8"?>
<flow xmlns="http://www.springframework.org/schema/webflow"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/webflow
                          http://www.springframework.org/schema/webflow/spring-webflow-2.0.xsd">

	<action-state id="greetingAction">
		<evaluate
			expression="greetingWebflowController.showGreetingInfo(externalContext.nativeRequest, externalContext.nativeResponse, flowRequestContext)" />
		<transition on="basicInfoEvent" to="performBasicInformationAction" />
		<transition on="greetingViewEvent" to="greetings" />
	</action-state>


	<view-state id="greetings" view="webCallFlow.view">
		<transition on="greeting" to="performBasicInformationAction" />
		<transition on="endCallEvent" to="EndCallView" />
	</view-state>


	<action-state id="performBasicInformationAction">
		<evaluate expression="BasicInformationController"></evaluate>
		<transition on="basicViewEvent" to="basicInfoView"></transition>
		<transition on="endCallEvent" to="EndCallView" />
	</action-state>

	<view-state id="basicInfoView" view="dynamicFlow.basic_information_usaa">
		<transition on="basicInfoEvent" to="performValidAddressAction" />
		<transition on="endCallEvent" to="EndCallView" />
	</view-state>

	<action-state id="performValidAddressAction">
		<evaluate expression="ValidAddressController"></evaluate>
		<transition on="validAddressEvent" to="validAddressView"></transition>
		<transition on="invalidAddressEvent" to="invalidAddressView"></transition>
		<transition on="multipleAddressEvent" to="multipleAddressView"></transition>
	</action-state>

	<view-state id="validAddressView" view="webCallFlow.isValidAddress">
		<transition on="addressFoundEvent" to="confirmNextView" />
		<transition on="endCallEvent" to="isClosingOfferShow" >
		    <set name="flowScope.callView" value="'endCallEvent'" type="string" />
		</transition>
	</view-state>

	<view-state id="invalidAddressView" view="webCallFlow.isInvalidAddress">
		<transition on="addressNotFoundEvent" to="performValidAddressAction" />
		<transition on="endCallEvent" to="EndCallView" />
	</view-state>

	<view-state id="multipleAddressView" view="webCallFlow.isMultipleAddress">
		<transition on="multipleAddressEvent" to="performValidAddressAction" />
		<transition on="endCallEvent" to="EndCallView" />
	</view-state>

     <action-state id="confirmNextView">
		<evaluate expression="ValidAddressController.confirmNextWebCallFlow(externalContext.nativeRequest, 
		flowRequestContext)" result="flowScope.flowEvent"/>
		<transition to="decideNextView"></transition>
	</action-state>
	
	<decision-state id="decideNextView">
		<if test="flowScope.flowEvent == 'confirmationViewEvent'" then="confirmationView"/>
		<if test="flowScope.flowEvent == 'offerEvent'" then="saversOfferView"/>
		<if test="flowScope.flowEvent == 'utilityOfferViewEvent'" then="performUtilityOfferAction"/>
	</decision-state>
	
    <view-state id="confirmationView" view="webCallFlow.confirmation">
		<on-entry>
			<evaluate expression="ConfirmationController"></evaluate>
		</on-entry>
		<transition on="confirmationEvent" to="saveConfirmationEmailAction" />
		<transition on="existingCustomerEvent" to="existingCustomerCKOView" />
		<transition on="endCallEvent" to="isClosingOfferShow" >
		    <set name="flowScope.callView" value="'endCallEvent'" type="string" />
		</transition>
	</view-state>
	
	<action-state id="saveConfirmationEmailAction">
		<evaluate expression="ConfirmationController.saveConfirmationEmailOnOrder(flowRequestContext)"></evaluate>
		<transition to="confirmationNextViewAction"/>
	</action-state>
	
	<action-state id="confirmationNextViewAction">
		<evaluate expression="ConfirmationController.decideViewAfterConfirmationView(flowRequestContext)"></evaluate>
		<transition on="saversOfferEvent" to="saversOfferView" />
		<transition on="utilityOfferEvent" to="performUtilityOfferAction" />
		<transition on="qualificationEvent" to="qualificationAction" />
	</action-state>

    <view-state id="saversOfferView" view="webCallFlow.offer">
		<on-entry>
			<evaluate expression="OfferController.showSaversOffer(flowRequestContext)"></evaluate>
		</on-entry>
		<transition on="utilityOfferEvent" to="performUtilityOfferAction" />
		<transition on="saveSaversOfferEvent" to="saveOfferOnOrderAction" />
		<transition on="existingCustomerEvent" to="existingCustomerCKOView" />
		<transition on="endCallEvent" to="isClosingOfferShow" >
		    <set name="flowScope.callView" value="'endCallEvent'" type="string" />
		</transition>
	</view-state>
	
	<action-state id="saveOfferOnOrderAction">
		<evaluate expression="OfferController.saveSaversOfferOnOrder(flowRequestContext)" result="flowScope.flowEvent"></evaluate>
		<transition on="recommendationsEvent" to="recommendationsView"/>
		<transition to="performUtilityOfferAction"/>
	</action-state>
	
	<action-state id="performUtilityOfferAction">
		<evaluate expression="UtilityOfferController"></evaluate>
		<transition on="recommendationsViewEvent" to="recommendationsView"></transition>
		<transition on="qualificationViewEvent" to="qualificationAction"></transition>
		<transition on="CKOViewEvent" to="CKOView"></transition>
		<transition on="endCallEvent" to="isClosingOfferShow" >
		    <set name="flowScope.callView" value="'endCallEvent'" type="string" />
		</transition>
	</action-state>
	
	<decision-state id="qualificationAction">
		<if test="flowScope.isMoveInDeltaPassed == true" then="qualificationMoveInDeltaView"
			else="qualificationView" />
	</decision-state>

	<view-state id="qualificationView" view="webCallFlow.qualification">
		<on-entry>
			<evaluate expression="QualificationController"/>
		</on-entry>
		<transition on="qualificationEvent" to="discoveryAction" />
		<transition on="existingCustomerEvent" to="existingCustomerCKOView" />
		<transition on="orderSummaryViewEvent" to="orderSummaryView" />
		<transition on="endCallEvent" to="isClosingOfferShow" >
		    <set name="flowScope.callView" value="'endCallEvent'" type="string" />
		</transition>
	</view-state>
	
	<view-state id="qualificationMoveInDeltaView" view="webCallFlow.qualificationMoveInDelta">
		<on-entry>
			<evaluate expression="QualificationController.gotoQualificationMoveInDeltaView(flowRequestContext)"/>
		</on-entry>
		<transition on="existingCustomerEvent" to="existingCustomerCKOView" />
		<transition on="orderSummaryViewEvent" to="orderSummaryView" />
		<transition on="discoveryAction" to="recommendationsView" />
		<transition on="endCallEvent" to="isClosingOfferShow" >
		    <set name="flowScope.callView" value="'endCallEvent'" type="string" />
		</transition>
		<transition on="endCallEventForDelta" to="isClosingOfferShow" >
		    <set name="flowScope.callView" value="'EndCallEventViewForDelta'" type="string" />
		</transition>
	</view-state>
	
	<view-state  id="EndCallEventViewForDelta" view="webCallFlow.closingcallnosale">
		<on-entry>
		<set name="flowScope.moveInDeltaAtuoDisposition" value="true" ></set>
			<evaluate expression="EndCallController" />
		</on-entry>
		<transition on="warmTransferEvent" to="warmTransferView" />
		<transition on="dispositionsEvent" to="DispositionAction" />
		<transition on="recommendationsByCategoryEvent" to="recommendationsByCategoryView" />
		<transition on="recommendationsBySyntheticBundlesEvent" to="recommendationsBySyntheticBundlesView" />
	</view-state>
	
	<!-- <action-state id="recommendationsView">
		<evaluate expression="DiscoveryController"></evaluate>
		<transition to="DecideDiscovery"></transition>
	</action-state> -->
	
	<action-state id="discoveryAction">
		<evaluate expression="DiscoveryController"></evaluate>
		<transition to="DecideDiscovery"></transition>
	</action-state>
	
	<decision-state id="DecideDiscovery">
		<if test="flowScope.View == 'sales.discoveryA' " then="toDiscoveryNew"  />
		<if test="flowScope.View == 'sales.discoveryB' " then="toDiscoveryTransfer" />
		<if test="flowScope.View == 'sales.discoveryC' " then="toDiscoveryMoveInDelta" />
	</decision-state>
	
	<view-state id="toDiscoveryNew" view="webCallFlow.discoveryA">
		<transition on="discoveryEvent" to="recommendationsView" />
		<transition on="backToQualificationEvent" to="qualificationAction" />
		<transition on="existingCustomerEvent" to="existingCustomerCKOView" />
		<transition on="orderSummaryViewEvent" to="orderSummaryView" />
		<transition on="endCallEvent" to="EndCallView" />
	</view-state>
	
	<view-state id="toDiscoveryTransfer" view="webCallFlow.discoveryB">
		<transition on="discoveryEvent" to="recommendationsView" />
		<transition on="backToQualificationEvent" to="qualificationAction" />
		<transition on="existingCustomerEvent" to="existingCustomerCKOView" />
		<transition on="orderSummaryViewEvent" to="orderSummaryView" />
		<transition on="endCallEvent" to="EndCallView" />
	</view-state>
	
	<view-state id="toDiscoveryMoveInDelta" view="webCallFlow.discoveryMoveInDelta">
		<transition on="discoveryEvent" to="recommendationsByCategoryView" />
		<transition on="existingCustomerEvent" to="existingCustomerCKOView" />
		<transition on="backToQualificationEvent" to="qualificationAction" />
		<transition on="orderSummaryViewEvent" to="orderSummaryView" />
		<transition on="endCallEvent" to="EndCallView" />
	</view-state>
	
	
	<view-state id="recommendationsView" view="webCallFlow.recommendations">
		<on-entry>
			<evaluate expression="RecommendationsController" />
		</on-entry>
		<transition on="recommendationsEvent" to="recommendationsView" />
		<transition on="recommendationsByCategoryEvent" to="recommendationsByCategoryView" />
		<transition on="recommendationsBySyntheticBundlesEvent" to="recommendationsBySyntheticBundlesView" />
		<transition on="orderSummaryViewEvent" to="orderSummaryView" />
		<transition on="CKO" to="CKOView" />
		<transition on="saversOfferEvent" to="saversOfferView" />
		<transition on="backToUtilityOffer" to="CKOView" />
		<transition on="backToDiscoveryEvent" to="discoveryAction" />
		<transition on="addToOrderAndCKOEvent" to="addToOrderAndCKOAction" />
		<transition on="existingCustomerEvent" to="existingCustomerCKOView" />
		<transition on="endCallEvent" to="isClosingOfferShow" >
		    <set name="flowScope.callView" value="'endCallEvent'" type="string" />
		</transition>
	</view-state>
		
	<view-state id="recommendationsByCategoryView" view="webCallFlow.recommendationsbyCategory">
		<on-entry>
			<evaluate expression="RecommendationsByCategory" />
		</on-entry>
		<transition on="recommendationsEvent" to="recommendationsView" />
		<transition on="recommendationsByCategoryEvent" to="recommendationsByCategoryView" />
		<transition on="recommendationsBySyntheticBundlesEvent" to="recommendationsBySyntheticBundlesView" />
		<transition on="orderSummaryViewEvent" to="orderSummaryView" />
		<transition on="CKO" to="CKOView" />
		<transition on="backToDiscoveryEvent" to="discoveryAction" />
		<transition on="addToOrderAndCKOEvent" to="addToOrderAndCKOAction" />
		<transition on="existingCustomerEvent" to="existingCustomerCKOView" />
		<transition on="endCallEvent" to="isClosingOfferShow" >
		    <set name="flowScope.callView" value="'endCallEvent'" type="string" />
		</transition>
	</view-state>
	
	<view-state id="recommendationsBySyntheticBundlesView" view="dynamicFlow.syntheticBundles">
		<on-entry>
			<evaluate expression="RecommendationsByCategory" />
		</on-entry>
		<transition on="recommendationsEvent" to="recommendationsView" />
		<transition on="recommendationsByCategoryEvent" to="recommendationsByCategoryView" />
		<transition on="recommendationsBySyntheticBundlesEvent" to="recommendationsBySyntheticBundlesView" />
		<transition on="orderSummaryViewEvent" to="orderSummaryView" />
		<transition on="addToOrderAndCKOEvent" to="addToOrderAndCKOAction" />
		<transition on="backToDiscoveryEvent" to="discoveryAction" />
		<transition on="existingCustomerEvent" to="existingCustomerCKOView" />
		<transition on="endCallEvent" to="isClosingOfferShow" >
		     <set name="flowScope.callView" value="'endCallEvent'" type="string" />
		</transition>
	</view-state>
	
	<view-state id="orderSummaryView" view="webCallFlow.orderSummary">
		<on-entry>
			<evaluate expression="CartOrderSummaryWebflowController" />
		</on-entry>
		<transition on="CKO" to="CKOView" />
		<transition on="orderRecapEvent" to="isClosingOfferShow" >
		    <set name="flowScope.callView" value="'placeOrderAction'" type="string" />
		</transition>
		<transition on="recommendationsEvent" to="recommendationsView"></transition>
		<transition on="recommendationsByCategoryEvent" to="recommendationsByCategoryView" />
		<transition on="recommendationsBySyntheticBundlesEvent" to="recommendationsBySyntheticBundlesView" />
		<transition on="removeLineItemEvent" to="removeLineItemAction" />
		<transition on="onReAddCompleteEvent" to="removeLineItemAction" />
		<transition on="existingCustomerEvent" to="existingCustomerCKOView" />
		<transition on="endCallEvent" to="isClosingOfferShow" >
		    <set name="flowScope.callView" value="'endCallEvent'" type="string" />
		</transition>
	</view-state>
	
	<action-state id="decideOrderSummuryNextView">
		<evaluate expression="CartOrderRecapWebflowController.decideOrderSummuryNextView(flowRequestContext)" ></evaluate>
		<transition on="orderRecapEvent" to="orderRecapViewEvent"/>
		<transition on="closeCallSaleViewEvent" to="isClosingOfferShow" >
		    <set name="flowScope.callView" value="'placeOrderAction'" type="string" />
		</transition>
	</action-state>
	
	<action-state id="removeLineItemAction">
		<evaluate expression="CartUpdateStateWebflowController"></evaluate>
		<transition to="orderSummaryView"></transition>
	</action-state>
	
	<view-state  id="CKOView" view="webCallFlow.CKO_start">
		<on-entry>
			<evaluate expression="CartCKOWebFlowController" />
		</on-entry>
		<transition on="cancelCKOEvent" to="cancelCKOAction" />
		<transition on="CKOCompleteEvent" to="orderSummaryView" />
		<transition on="recommendationsEvent" to="recommendationsView"></transition>
		<transition on="recommendationsByCategoryEvent" to="recommendationsByCategoryView" />
		<transition on="recommendationsBySyntheticBundlesEvent" to="recommendationsBySyntheticBundlesView" />
		<transition on="qualificationEvent" to="qualificationAction"></transition>
		<transition on="existingCustomerEvent" to="existingCustomerCKOView" />
		<transition on="endCallEvent" to="isClosingOfferShow" >
		    <set name="flowScope.callView" value="'endCallEvent'" type="string" />
		</transition>
		<transition on="orderSummaryViewEvent" to="orderSummaryView" />
		<!-- Added below transition,when we are in closingOffer CKO,once CKO Completed we can go directly to close call sale page with out checking isClosingOffer condition-->
		<transition on="closeCallSaleViewEvent" to="placeOrderAction" />
	    <!-- Added below transition,when we are in closingOffer CKO,once CKO Completed we can go directly to close call no sale page with out checking isClosingOffer condition-->
		<transition on="endCallEvent" to="EndCallView" />
		<!-- Added below transition,when we are in closingOffer CKO,once CKO Completed we can go directly to close call sale page with out checking isClosingOffer condition-->
		<transition on="placeOrderAction" to="placeOrderAction"/>
		<transition on="endCallEventForDelta" to="EndCallEventViewForDelta"/>
	</view-state>
	
	<view-state  id="existingCustomerCKOView" view="dynamicFlow.CKO_start">
		<on-entry>
			<evaluate expression="CartCKOWebFlowController.showExistingCustomerCKOView(flowRequestContext)" />
		</on-entry>
		<transition on="cancelECCKOEvent" to="recommendationsView" />
		<transition on="cancelCKOEvent" to="recommendationsView"/>
		<transition on="recommendationsEvent" to="recommendationsView"></transition>
		<transition on="recommendationsByCategoryEvent" to="recommendationsByCategoryView" />
		<transition on="recommendationsBySyntheticBundlesEvent" to="recommendationsBySyntheticBundlesView" />
		<transition on="endCallEvent" to="isClosingOfferShow" >
		    <set name="flowScope.callView" value="'endCallEvent'" type="string" />
		</transition>
		<transition on="existingCustomerEvent" to="existingCustomerCKOView" />
		<transition on="orderSummaryViewEvent" to="orderSummaryView" />
	</view-state>
	
	<action-state id="addToOrderAndCKOAction">
		<evaluate expression="CartCKOWebFlowController.addProductToOrderAndCKO(flowRequestContext)"></evaluate>
		<transition on="CKOViewEvent" to="addToOrderAndCKOView"></transition>
		<transition on="recommendationsEvent" to="recommendationsView"></transition>
	</action-state>
	
	<view-state  id="addToOrderAndCKOView" view="dynamicFlow.CKO_start">
		<transition on="cancelCKOEvent" to="cancelCKOAction" />
		<transition on="CKOCompleteEvent" to="orderSummaryView" />
		<transition on="recommendationsEvent" to="recommendationsView"></transition>
		<transition on="recommendationsByCategoryEvent" to="recommendationsByCategoryView" />
		<transition on="recommendationsBySyntheticBundlesEvent" to="recommendationsBySyntheticBundlesView" />
		<transition on="qualificationEvent" to="qualificationAction"></transition>
		<transition on="endCallEvent" to="isClosingOfferShow" >
		    <set name="flowScope.callView" value="'endCallEvent'" type="string" />
		</transition>
		<transition on="existingCustomerEvent" to="existingCustomerCKOView" />
		<transition on="orderSummaryViewEvent" to="orderSummaryView" />
		<!-- Added below transition,when we are in closingOffer CKO,once CKO Completed we can go directly to close call sale page with out checking isClosingOffer condition-->
		<transition on="closeCallSaleViewEvent" to="placeOrderAction" />
		<!-- Added below transition,when we are in closingOffer CKO,once CKO Completed we can go directly to close call sale page with out checking isClosingOffer condition-->
		<transition on="placeOrderAction" to="placeOrderAction" />
		<transition on="endCallEventForDelta" to="EndCallEventViewForDelta"/>
	</view-state>
	
	<action-state id="cancelCKOAction">
		<evaluate expression="CartCKOWebFlowController.cancelCKO(flowRequestContext)"></evaluate>
		<transition on="qualificationEvent" to="qualificationView"></transition>
		<transition on="recommendationsEvent" to="recommendationsView"></transition>
		<transition on="orderSummaryEvent" to="orderSummaryView" />
		<!-- Added below transition,when we are in closingOffer CKO,once CKO Completed we can go directly to close call sale page with out checking isClosingOffer condition-->
		<transition on="closeCallSaleViewEvent" to="placeOrderAction" />
	    <!-- Added below transition,when we are in closingOffer CKO,once CKO Completed we can go directly to close call no sale page with out checking isClosingOffer condition-->
		<transition on="endCallEvent" to="EndCallView" />
		<!-- Added below transition,when we are in closingOffer CKO,once CKO Completed we can go directly to close call sale page with out checking isClosingOffer condition-->
		<transition on="placeOrderAction" to="placeOrderAction"/>
		<transition on="endCallEventForDelta" to="EndCallEventViewForDelta"/>
	</action-state>
	

    <view-state id="orderRecapViewEvent" view="webCallFlow.orderRecap">
		<on-entry>
			<evaluate expression="CartOrderRecapWebflowController" />
		</on-entry>
		<transition on="recommendationsEvent" to="recommendationsView"></transition>
		<transition on="recommendationsByCategoryEvent" to="recommendationsByCategoryView" />
		<transition on="recommendationsBySyntheticBundlesEvent" to="recommendationsBySyntheticBundlesView" />
		<transition on="closeCallSaleViewEvent" to="isClosingOfferShow" >
		  <set name="flowScope.callView" value="'closeCallSaleViewEvent'" type="string" />
		</transition>
		<transition on="existingCustomerEvent" to="existingCustomerCKOView" />
		<transition on="orderSummaryViewEvent" to="orderSummaryView" />
	</view-state>
	
	<action-state id="placeOrderAction">
		<evaluate expression="CartOrderRecapWebflowController.submitOrder(flowRequestContext)"></evaluate>
		<transition to="closeCallSaleView"/>
	</action-state>
	
	<action-state id="isClosingOfferShow">
		<evaluate expression="ClosingOfferController.isClosingOfferShow(flowRequestContext)"></evaluate>
		<transition on="endCallEventForDelta" to="EndCallEventViewForDelta"/>
		<transition on="CKOViewEvent" to="CKOView"></transition>
		<transition on="endCallEvent" to="EndCallView" />
		<transition on="placeOrderAction" to="placeOrderAction"/>
		<transition on="closeCallSaleViewEvent" to="placeOrderAction"/>
	</action-state>
	
	<view-state  id="EndCallView" view="webCallFlow.closingcallnosale">
		<on-entry>
			<evaluate expression="EndCallController" />
		</on-entry>
		<transition on="warmTransferEvent" to="warmTransferView" />
		<transition on="dispositionsEvent" to="DispositionAction" />
		<transition on="recommendationsByCategoryEvent" to="recommendationsByCategoryView" />
		<transition on="recommendationsBySyntheticBundlesEvent" to="recommendationsBySyntheticBundlesView" />
	</view-state>
	
	<view-state id="warmTransferView" view="dynamicFlow.warmTransfer">
		   <on-entry>
				<evaluate expression="WarmTransferController.showWarmTransfer(flowRequestContext,externalContext.nativeRequest)" />
			</on-entry>
		<transition on="saveWarmTransferEvent" to="saveWarmTransferAction" />
	</view-state>
	
   <action-state id="saveWarmTransferAction">
		<evaluate expression="WarmTransferController.saveWarmTransferDetails(externalContext.nativeRequest)"></evaluate>
		<transition to="DispositionAction" />
	</action-state>
	
	<view-state id="closeCallSaleView" view="webCallFlow.closeCallSale">
		<on-entry>
			<evaluate expression="CartOrderRecapSaveWebflowController" />
		</on-entry>
	</view-state>
	
	<action-state id="DispositionAction">
	   <evaluate expression="DispositionController" />
		<transition on="dispositionEvent" to="dispositionView"/>
		<transition on="idlePageEvent" to="idlePage"/>
	</action-state>
	
	 <end-state id="idlePage" view="externalRedirect:#{externalContext.sessionMap.urlPath}/salescenter/login_process" />
	
	<view-state id="dispositionView" view="webCallFlow.dispositions"/>
	
	<view-state id="unRecoverableEvent" view="webflow.Unrecoverable" />
		
	<view-state id="recoverableEvent" view="webflow.recoverable" />
		
	<view-state id="errorEvent" view="webflow.error" />
		
	<global-transitions>
		<transition on-exception="com.AL.V.exception.UnRecoverableException" to="unRecoverableEvent"/>
		<transition on-exception="com.AL.V.exception.RecoverableException" to="recoverableEvent"/>
		<transition on-exception="java.lang.Exception" to="errorEvent"/>
	</global-transitions>
	</flow>