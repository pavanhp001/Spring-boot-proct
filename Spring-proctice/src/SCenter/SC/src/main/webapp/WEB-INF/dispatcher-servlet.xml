<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:task="http://www.springframework.org/schema/task" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans  
		http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx-3.0.xsd 
		http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.0.xsd
		http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-3.0.xsd
        http://www.springframework.org/schema/mvc 
        http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd">

	<import resource="webflow-config.xml"/>
	<!-- Configures the @Controller programming model -->
	<mvc:annotation-driven />

	<mvc:resources mapping="/rest/customer/style/**"
		location="/style/" />

	<context:component-scan base-package="com.AL.controller" />

	<bean class="com.AL.util.spring.DatasourcePostProcessor" />

	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>file:///D:/config/sym.db.mysql.properties</value>
				<value>file:///D:/config/score-db.mysql.properties</value>
				<value>/WEB-INF/classes/dialog.properties</value>
				<value>file:///D:/config/score-credentials.properties</value>
				<value>file:///D:/config/score.properties</value>
				<value>file:///D:/config/salescenter.properties</value>
			</list>
		</property>
		<property name="ignoreUnresolvablePlaceholders" value="false" />
		<property name="order" value="0" />
	</bean>
	
	<bean id="amazonS3" class="com.AL.factory.AmazonS3Factory">
		<constructor-arg value="${accessKey}" />
		<constructor-arg value="${secretKey}" />
		<constructor-arg value="${credentials.source}" />
	</bean>
	
	<!-- Amazon s3 Connection -->
	<bean id="repositoryService" class="com.AL.service.impl.RepositoryAmazonS3Impl"	depends-on="amazonS3" >
		<constructor-arg value="#{amazonS3.getAmazonS3Client()}" />
		<property name="bucket" value="${score.s3.bucket.name}"/>
		<property name="key" value="${score.s3.key.prefix}"/>	
	</bean>

	<bean id="repositoryItTicketService" class="com.AL.service.impl.RepositoryAmazonItTicketS3Impl"	depends-on="amazonS3" >
		<constructor-arg value="#{amazonS3.getAmazonS3Client()}" />
		<property name="bucket" value="${itticket.s3.bucket.name}"/>
		<property name="key" value="${score.s3.key.prefix}"/>	
	</bean>

	<bean id="log4jInitialization" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean"> 
		<property name="targetClass" value="org.springframework.util.Log4jConfigurer" /> 
		<property name="targetMethod" value="initLogging" />   
		<property name="arguments">      
			<list>     
				<value>file:///D:/config/log4j.xml</value> 
			</list> 
		</property> 
	</bean>

   <bean id="marshaller" class="org.springframework.oxm.xstream.XStreamMarshaller">
		<property name="aliases">
			<map>
				<entry key="items" value="java.util.List" />
				<entry key="item" value="com.AL.ui.domain.WebLookup" />
				<entry key="lookups" value="com.AL.ui.domain.WebLookupCollection" />
			</map>
		</property>

	</bean>

	<bean id="messageSource"
		class="org.springframework.context.support.ResourceBundleMessageSource">
		<property name="basename" value="locale/messages" />
	</bean>

	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- one of the properties available; the maximum file size in bytes -->
		<property name="maxUploadSize" value="2000000" />
	</bean>

	<!-- Forwards requests to the "/" resource to the "welcome" view -->
	<mvc:view-controller path="/" view-name="welcome" />

	<!-- Configures Handler Interceptors -->
	<mvc:interceptors>
		<bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor" />
		<bean class="com.AL.interceptor.RequestInterceptor" />
	</mvc:interceptors>

	<!-- Saves a locale change using a cookie -->
	<bean id="localeResolver"
		class="org.springframework.web.servlet.i18n.CookieLocaleResolver" />

	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.UrlBasedViewResolver">
		<property name="viewClass"
			value="org.springframework.web.servlet.view.JstlView" />
		<property name="prefix" value="/WEB-INF/jsp/" />
		<property name="suffix" value=".jsp" />
	</bean>

	<bean id="tilesViewResolver"
		class="org.springframework.web.servlet.view.UrlBasedViewResolver">
		<property name="viewClass"
			value="org.springframework.web.servlet.view.tiles2.TilesView" />
		<property name="contentType" value="text/html;charset=UTF-8" />
		<property name="cache" value="true" />
		<property name="prefix" value="" />
		<property name="order" value="1"></property>
		<property name="suffix" value="" />

	</bean>

	<bean id="tilesConfigurer"
		class="org.springframework.web.servlet.view.tiles2.TilesConfigurer">
		<property name="definitions">
			<list>
				<value>/WEB-INF/tiles/tiles.xml</value>
				<value>/WEB-INF/tiles/tiles-sales.xml</value>
				<value>/WEB-INF/tiles/tiles-cart.xml</value>
				<value>/WEB-INF/tiles/tiles-simplechoice-fe.xml</value>
    			<value>/WEB-INF/tiles/tiles-simplechoice-peco.xml</value>
    			<value>/WEB-INF/tiles/tiles-webcallflow.xml</value>
    			<value>/WEB-INF/tiles/tiles-dynamicflow.xml</value>
			</list>
		</property>
	</bean>

	<!-- minimum needed to make REST calls -->
	<bean id="restTemplate" class="org.springframework.web.client.RestTemplate" />

	<context:annotation-config />
	<context:component-scan base-package="com.AL" />
	<task:annotation-driven />

	<bean class="com.AL.util.spring.DatasourcePostProcessor" />
	<bean
		class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor">
		<property name="defaultPersistenceUnitName" value="transactional_pu" />
	</bean>
	<bean id="pum"
		class="org.springframework.orm.jpa.persistenceunit.DefaultPersistenceUnitManager">
		<property name="persistenceXmlLocations">
			<list>
				<value>classpath:META-INF/persistence.xml</value>
			</list>
		</property>
		<property name="dataSources">
			<map>
				<entry key="transactionalDatasource" value-ref="transactionalDatasource" />
			</map>
		</property>
	</bean>
	<bean id="transactionalDatasource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="${base.mysql.db.driver}" />
		<property name="jdbcUrl" value="${base.mysql.db.url}" />
		<property name="user" value="${base.mysql.db.userName}" />
		<property name="password" value="${base.mysql.db.passWord}" />
		<property name="initialPoolSize" value="${base.mysql.db.poolsize.min}" />
		<property name="minPoolSize" value="${base.mysql.db.poolsize.min}" />
		<property name="maxPoolSize" value="${base.mysql.db.poolsize.max}" />
		<property name="maxConnectionAge" value="${base.mysql.db.max.conn.age}" />
		<property name="acquireRetryAttempts" value="${base.mysql.db.acquire.retry.attempts}" />
		<property name="maxIdleTimeExcessConnections" value="${base.mysql.db.max.idle.time}" />
		<property name="CKOTimeout" value="${base.mysql.db.CKO.timeout}" /> 
	</bean>
	
	<bean
		class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor">
		<property name="defaultPersistenceUnitName" value="transactional_pu_score" />
	</bean>
	
	<bean id="scorePum"
		class="org.springframework.orm.jpa.persistenceunit.DefaultPersistenceUnitManager">
		<property name="persistenceXmlLocations">
			<list>
				<value>classpath:META-INF/persistence_score.xml</value>
			</list>
		</property>
		<property name="dataSources">
			<map>
				<entry key="scoreTransactionalDatasource" value-ref="scoreTransactionalDatasource" />
			</map>
		</property>
	</bean>
	
	<bean id="transactionalEntityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="persistenceUnitManager" ref="pum" />
		<property name="persistenceUnitName" value="transactional_pu" />
		<property name="dataSource" ref="transactionalDatasource" />
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
			</bean>
		</property>

		<property name="loadTimeWeaver">
			<bean
				class="org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver" />
		</property>
		<property name="jpaDialect">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaDialect">
			</bean>
		</property>
	</bean>

	<bean id="transactionalTransactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="transactionalEntityManagerFactory" />
		<qualifier value="transactional" />
		<property name="jpaDialect">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaDialect" />
		</property>
	</bean>

	<bean id="scoreTransactionalDatasource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="${score.mysql.db.driver}" />
		<property name="jdbcUrl" value="${score.mysql.db.url}" />
		<property name="user" value="${score.mysql.db.userName}" />
		<property name="password" value="${score.mysql.db.passWord}" />
		<property name="initialPoolSize" value="${score.mysql.db.poolsize.min}" />
		<property name="minPoolSize" value="${score.mysql.db.poolsize.min}" />
		<property name="maxPoolSize" value="${score.mysql.db.poolsize.max}" />
		<property name="maxConnectionAge" value="${score.mysql.db.max.conn.age}" />
		<property name="acquireRetryAttempts" value="${score.mysql.db.acquire.retry.attempts}" />
		<property name="maxIdleTimeExcessConnections" value="${score.mysql.db.max.idle.time}" />
		<property name="CKOTimeout" value="${score.mysql.db.CKO.timeout}" />
	</bean>
 
	<bean id="scoreTransactionalEntityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="persistenceUnitManager" ref="scorePum" />
		<property name="persistenceUnitName" value="transactional_pu_score" />
		<property name="dataSource" ref="scoreTransactionalDatasource" />
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
			</bean>
		</property>
		<property name="loadTimeWeaver">
			<bean
				class="org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver" />
		</property>
		<property name="jpaDialect">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaDialect">
			</bean>
		</property>
	</bean>

	<bean id="scoreTransactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="scoreTransactionalEntityManagerFactory" />
		<qualifier value="transactional_score" />
		<property name="jpaDialect">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaDialect" />
		</property>
	</bean>
	
	<tx:annotation-driven transaction-manager="transactionalTransactionManager" />
	<tx:annotation-driven transaction-manager="scoreTransactionManager" />
	<context:annotation-config />
	<!-- <bean id="applicationName" class="com.AL.util.GetAppName" scope="singleton">
	 <constructor-arg name="appName" value="salescenter/" />
	</bean> -->
	
</beans>
