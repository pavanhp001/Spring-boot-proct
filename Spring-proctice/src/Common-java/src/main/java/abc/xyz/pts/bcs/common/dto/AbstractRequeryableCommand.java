/* **************************************************************************
 *                                                            *
 * **************************************************************************
 * This code contains copyright information which is the proprietary property
 * of   Application Solutions. No part of this code may be reproduced,
 * stored or transmitted in any form without the prior written permission of
 *   Application Solutions.
 *
 * Copyright   Application Solutions 2008
 * All rights reserved.
 */
//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.1.2-b01-fcs
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a>
// Any modifications to this file will be lost upon recompilation of the source schema.
// Generated on: 2008.06.06 at 10:53:19 AM BST
//

package abc.xyz.pts.bcs.common.dto;

import java.io.Serializable;
import java.math.BigInteger;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlType;

/**
 * <p>
 * Java class for AbstractRequeryableCommand complex type.
 *
 * <p>
 * The following schema fragment specifies the expected content contained within this class.
 *
 * <pre>
 * &lt;complexType name="AbstractRequeryableCommand">
 *   &lt;complexContent>
 *     &lt;extension base="{CommonBeanDefinitionsSchema}AbstractQueryCommand">
 *       &lt;attribute name="requery" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="startRecordForRequery" type="{http://www.w3.org/2001/XMLSchema}integer" />
 *       &lt;attribute name="recordsPerPage" type="{http://www.w3.org/2001/XMLSchema}integer" />
 *       &lt;attribute name="orderByColumn" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="ascDesc" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="pageNumber" type="{http://www.w3.org/2001/XMLSchema}integer" />
 *       &lt;attribute name="rowNumberEnd" type="{http://www.w3.org/2001/XMLSchema}integer" />
 *       &lt;attribute name="previousDisabled" type="{http://www.w3.org/2001/XMLSchema}anySimpleType" />
 *       &lt;attribute name="nextDisabled" type="{http://www.w3.org/2001/XMLSchema}anySimpleType" />
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 *
 *
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "AbstractRequeryableCommand", namespace = "CommonBeanDefinitionsSchema")
@Deprecated // not used since Qatar Interim
public class AbstractRequeryableCommand extends AbstractQueryCommand implements Serializable {

    @XmlAttribute
    protected String requery;
    @XmlAttribute
    protected BigInteger startRecordForRequery = BigInteger.ONE;
    @XmlAttribute
    protected BigInteger recordsPerPage = BigInteger.valueOf(100); // Default page size
    @XmlAttribute
    protected String orderByColumn;
    @XmlAttribute
    protected String ascDesc = "ASC"; // Default order by
    @XmlAttribute
    protected BigInteger pageNumber = BigInteger.valueOf(1);
    @XmlAttribute
    protected BigInteger rowNumberEnd;
    @XmlAttribute
    @XmlSchemaType(name = "anySimpleType")
    protected String previousDisabled;
    @XmlAttribute
    @XmlSchemaType(name = "anySimpleType")
    protected String nextDisabled;
    protected String pagination;

    /**
     * Gets the value of the requery property.
     *
     * @return possible object is {@link String }
     *
     */
    public String getRequery() {
        return requery;
    }

    /**
     * Sets the value of the requery property.
     *
     * @param value
     *            allowed object is {@link String }
     *
     */
    public void setRequery(final String value) {
        this.requery = value;
    }

    /**
     * Gets the value of the startRecordForRequery property.
     *
     * @return possible object is {@link BigInteger }
     *
     */
    public BigInteger getStartRecordForRequery() {
        return startRecordForRequery;
    }

    /**
     * Sets the value of the startRecordForRequery property.
     *
     * @param value
     *            allowed object is {@link BigInteger }
     *
     */
    public void setStartRecordForRequery(final BigInteger value) {
        this.startRecordForRequery = value;
    }

    /**
     * Gets the value of the recordsPerPage property.
     *
     * @return possible object is {@link BigInteger }
     *
     */
    public BigInteger getRecordsPerPage() {
        return recordsPerPage;
    }

    /**
     * Sets the value of the recordsPerPage property.
     *
     * @param value
     *            allowed object is {@link BigInteger }
     *
     */
    public void setRecordsPerPage(final BigInteger value) {
        this.recordsPerPage = value;
    }

    /**
     * Gets the value of the orderByColumn property.
     *
     * @return possible object is {@link String }
     *
     */
    public String getOrderByColumn() {
        return orderByColumn;
    }

    /**
     * Sets the value of the orderByColumn property.
     *
     * @param value
     *            allowed object is {@link String }
     *
     */
    public void setOrderByColumn(final String value) {
        this.orderByColumn = value;
    }

    /**
     * Gets the value of the ascDesc property.
     *
     * @return possible object is {@link String }
     *
     */
    public String getAscDesc() {
        return ascDesc;
    }

    /**
     * Sets the value of the ascDesc property.
     *
     * @param value
     *            allowed object is {@link String }
     *
     */
    public void setAscDesc(final String value) {
        this.ascDesc = value;
    }

    /**
     * Gets the value of the pageNumber property.
     *
     * @return possible object is {@link BigInteger }
     *
     */
    public BigInteger getPageNumber() {
        return pageNumber;
    }

    /**
     * Sets the value of the pageNumber property.
     *
     * @param value
     *            allowed object is {@link BigInteger }
     *
     */
    public void setPageNumber(final BigInteger value) {
        this.pageNumber = value;
    }

    /**
     * Gets the value of the rowNumberEnd property.
     *
     * @return possible object is {@link BigInteger }
     *
     */
    public BigInteger getRowNumberEnd() {
        return rowNumberEnd;
    }

    /**
     * Sets the value of the rowNumberEnd property.
     *
     * @param value
     *            allowed object is {@link BigInteger }
     *
     */
    public void setRowNumberEnd(final BigInteger value) {
        this.rowNumberEnd = value;
    }

    /**
     * Gets the value of the previousDisabled property.
     *
     * @return possible object is {@link String }
     *
     */
    public String getPreviousDisabled() {
        return previousDisabled;
    }

    /**
     * Sets the value of the previousDisabled property.
     *
     * @param value
     *            allowed object is {@link String }
     *
     */
    public void setPreviousDisabled(final String value) {
        this.previousDisabled = value;
    }

    /**
     * Gets the value of the nextDisabled property.
     *
     * @return possible object is {@link String }
     *
     */
    public String getNextDisabled() {
        return nextDisabled;
    }

    /**
     * Sets the value of the nextDisabled property.
     *
     * @param value
     *            allowed object is {@link String }
     *
     */
    public void setNextDisabled(final String value) {
        this.nextDisabled = value;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = super.hashCode();
        result = prime * result + ((ascDesc == null) ? 0 : ascDesc.hashCode());
        result = prime * result + ((nextDisabled == null) ? 0 : nextDisabled.hashCode());
        result = prime * result + ((orderByColumn == null) ? 0 : orderByColumn.hashCode());
        result = prime * result + ((pageNumber == null) ? 0 : pageNumber.hashCode());
        result = prime * result + ((previousDisabled == null) ? 0 : previousDisabled.hashCode());
        result = prime * result + ((recordsPerPage == null) ? 0 : recordsPerPage.hashCode());
        result = prime * result + ((requery == null) ? 0 : requery.hashCode());
        result = prime * result + ((rowNumberEnd == null) ? 0 : rowNumberEnd.hashCode());
        result = prime * result + ((startRecordForRequery == null) ? 0 : startRecordForRequery.hashCode());
        return result;
    }

    @Override
    public boolean equals(final Object obj) {
        if (this == obj) {
            return true;
        }
        if (!super.equals(obj)) {
            return false;
        }
        if (getClass() != obj.getClass()) {
            return false;
        }
        final AbstractRequeryableCommand other = (AbstractRequeryableCommand) obj;
        if (ascDesc == null) {
            if (other.ascDesc != null) {
                return false;
            }
        } else if (!ascDesc.equals(other.ascDesc)) {
            return false;
        }
        if (nextDisabled == null) {
            if (other.nextDisabled != null) {
                return false;
            }
        } else if (!nextDisabled.equals(other.nextDisabled)) {
            return false;
        }
        if (orderByColumn == null) {
            if (other.orderByColumn != null) {
                return false;
            }
        } else if (!orderByColumn.equals(other.orderByColumn)) {
            return false;
        }
        if (pageNumber == null) {
            if (other.pageNumber != null) {
                return false;
            }
        } else if (!pageNumber.equals(other.pageNumber)) {
            return false;
        }
        if (previousDisabled == null) {
            if (other.previousDisabled != null) {
                return false;
            }
        } else if (!previousDisabled.equals(other.previousDisabled)) {
            return false;
        }
        if (recordsPerPage == null) {
            if (other.recordsPerPage != null) {
                return false;
            }
        } else if (!recordsPerPage.equals(other.recordsPerPage)) {
            return false;
        }
        if (requery == null) {
            if (other.requery != null) {
                return false;
            }
        } else if (!requery.equals(other.requery)) {
            return false;
        }
        if (rowNumberEnd == null) {
            if (other.rowNumberEnd != null) {
                return false;
            }
        } else if (!rowNumberEnd.equals(other.rowNumberEnd)) {
            return false;
        }
        if (startRecordForRequery == null) {
            if (other.startRecordForRequery != null) {
                return false;
            }
        } else if (!startRecordForRequery.equals(other.startRecordForRequery)) {
            return false;
        }
        return true;
    }

    public String getPagination() {
        return pagination;
    }

    public void setPagination(final String pagination) {
        this.pagination = pagination;
    }

}
